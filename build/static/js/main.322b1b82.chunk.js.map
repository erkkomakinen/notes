{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","axios","get","then","response","data","newObject","post","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToSow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8MAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,4BACGH,EAAKI,QACN,4BAAQC,QAASJ,GAAmBC,KCU3B,EAfA,WAEb,OADgBI,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC4D5BK,EAtEH,SAAAC,GAAU,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,iBAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,KAKnBC,qBAAU,WACRC,IAAqBjB,MAAK,SAAAkB,GACxBP,EAASO,QAEV,IAEH,IAmBMC,EAAaL,EAAUJ,EAAQA,EAAMU,QAAO,SAAA5B,GAAI,OAAIA,EAAKG,aAiB/D,OACE,6BACE,qCACA,4BAAQE,QAAS,kBAAMkB,GAAYD,KAAnC,QACQA,EAAU,YAAc,OAEhC,4BACGK,EAAWE,KAAI,SAAC7B,EAAM8B,GAAP,OACd,kBAAC,EAAD,CACEC,IAAKD,EACL9B,KAAMA,EACNC,iBAAkB,kBA1BD,SAAAY,GACzB,IAAMb,EAAOkB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,KAChCqB,EAAW,eAAQlC,EAAR,CAAcG,WAAYH,EAAKG,YAEhDsB,EACUZ,EAAIqB,GACX1B,MAAK,SAAA2B,GACJhB,EAASD,EAAMW,KAAI,SAAA7B,GAAI,OAAKA,EAAKa,KAAOA,EAAKb,EAAOmC,SAErDC,OAAM,SAAAC,GACLC,MAAM,aAAD,OAActC,EAAKI,QAAnB,sCACLe,EAASD,EAAMU,QAAO,SAAAK,GAAC,OAAIA,EAAEpB,KAAOA,SAeR0B,CAAmBvC,EAAKa,WAItD,0BAAM2B,SAnDM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjBvC,QAASgB,EACTwB,MAAM,IAAIC,MAAOC,cACjB3C,UAAW4C,KAAKC,SAAW,IAG7BvB,EAAmBkB,GAAYnC,MAAK,SAAA2B,GAClChB,EAASD,EAAM+B,OAAOd,IACtBd,EAAW,SA0CT,2BAAO6B,MAAO9B,EAAS+B,SAtCJ,SAAAV,GAEvBpB,EAAWoB,EAAMW,OAAOF,UAqCpB,4BAAQG,KAAK,UAAb,WCjERC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.322b1b82.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\"\r\n\r\n  return (\r\n    <li>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\nexport default Note\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/notes\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n","import React, { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport Note from \"./components/Note\"\r\nimport noteService from \"./services/notes\"\r\n\r\nconst App = props => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState(\"a new note...\")\r\n  const [showAll, setShowAll] = useState(false)\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then(initialNotes => {\r\n      setNotes(initialNotes)\r\n    })\r\n  }, [])\r\n\r\n  const addNote = event => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5\r\n    }\r\n\r\n    noteService.create(noteObject).then(returnedNote => {\r\n      setNotes(notes.concat(returnedNote))\r\n      setNewNote(\"\")\r\n    })\r\n  }\r\n\r\n  const handleNoteChange = event => {\r\n    //console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToSow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote)))\r\n      })\r\n      .catch(error => {\r\n        alert(`the note '${note.content}' was already deleted from server`)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <button onClick={() => setShowAll(!showAll)}>\r\n        Show {showAll ? \"important\" : \"all\"}\r\n      </button>\r\n      <ul>\r\n        {notesToSow.map((note, i) => (\r\n          <Note\r\n            key={i}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type='submit'>save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}